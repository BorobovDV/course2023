# Generated by Django 4.2 on 2023-05-16 05:34

import booking.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActualFilms',
            fields=[
                ('idfilm', models.AutoField(db_column='IDfilm', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, verbose_name='Название фильма')),
                ('duration', models.TimeField()),
                ('poster', models.ImageField(upload_to='posters/%Y/%m/%d')),
                ('trailer', models.CharField(max_length=150, null=True, verbose_name='Ссылка на трейлер')),
                ('flag', models.BooleanField(default=False, verbose_name='Прямо сейчас в прокате')),
                ('price', models.IntegerField(help_text='Рекомендуемая цена для всех 300 руб.', verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Актуальный фильм',
                'db_table': 'ActualFilms',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('idsession', models.AutoField(db_column='IDSession', primary_key=True, serialize=False)),
                ('date', models.DateField(db_column='Date')),
                ('time', models.TimeField(db_column='Time')),
                ('hall', models.IntegerField(db_column='Hall')),
                ('idfilm', models.ForeignKey(db_column='IDfilm', on_delete=django.db.models.deletion.PROTECT, to='booking.actualfilms')),
            ],
            options={
                'verbose_name': 'Сеанс',
                'db_table': 'Session',
                'unique_together': {('date', 'time', 'idfilm', 'hall'), ('time', 'hall', 'date')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='Email', max_length=75, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=50)),
                ('login', models.CharField(db_column='Login', max_length=50, unique=True)),
                ('role', models.CharField(db_column='Role', max_length=30, validators=[booking.models.role_validator])),
            ],
            options={
                'verbose_name': 'Пользователь',
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('idsession', models.OneToOneField(db_column='IDSession', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='booking.session')),
                ('p1', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 1')),
                ('p2', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 2')),
                ('p3', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 3')),
                ('p4', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 4')),
                ('p5', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 5')),
                ('p6', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 6')),
                ('p7', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 7')),
                ('p8', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 8')),
                ('p9', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 9')),
                ('p10', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 10')),
                ('p11', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 11')),
                ('p12', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 12')),
                ('p13', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 13')),
                ('p14', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 14')),
                ('p15', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 15')),
                ('p16', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 16')),
                ('p17', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 17')),
                ('p18', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 18')),
                ('p19', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 19')),
                ('p20', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 20')),
                ('p21', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 21')),
                ('p22', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 22')),
                ('p23', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 23')),
                ('p24', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 24')),
                ('p25', models.IntegerField(validators=[booking.models.place_validator], verbose_name='Место 25')),
            ],
            options={
                'verbose_name': 'Место',
                'db_table': 'Places',
            },
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('idrent', models.AutoField(db_column='IDRent', primary_key=True, serialize=False)),
                ('place', models.IntegerField(db_column='Place', validators=[booking.models.rent_validator])),
                ('buyflg', models.BooleanField()),
                ('idsession', models.ForeignKey(db_column='IDSession', on_delete=django.db.models.deletion.PROTECT, to='booking.session')),
                ('iduser', models.ForeignKey(db_column='IDUser', on_delete=django.db.models.deletion.PROTECT, to='booking.user')),
            ],
            options={
                'verbose_name': 'Бронь',
                'db_table': 'Rent',
                'unique_together': {('idsession', 'place')},
            },
        ),
    ]
